@model IEnumerable<CharacterManager.Models.JournalModels.JournalListItem>

@{
    ViewBag.Title = "Index";
    var name = ViewBag.CharacterName;
}

<ol class="breadcrumb">
    <li>@Html.ActionLink("Characters", "Index", "Character")</li>
    <li>@Html.ActionLink((string)name, "Details", "Character", new { id = Request.Url.Segments.Last() }, null)</li>
    <li class="active">Journal</li>
</ol>

@if (TempData.ContainsKey("SaveResult"))
{
    <div class="alert alert-success fade in" role="alert">

        <button type="button" class="close" data-dismiss="alert">
            <span>&times;</span>
        </button>
        @TempData["SaveResult"]
    </div>
}

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Content)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreatedUtc)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @{ var truncated = item.Content.Truncate(); }
                @Html.DisplayFor(modelItem => truncated)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedUtc)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.JournalId }) |
                @Html.ActionLink("Details", "Details", new { id = item.JournalId }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.JournalId })
            </td>
        </tr>
    }

</table>

<ol class="breadcrumb">
    <li>@Html.ActionLink("Characters", "Index", "Character")</li>
    <li>@Html.ActionLink((string)name, "Details", "Character", new { id = Request.Url.Segments.Last() }, null)</li>
    <li class="active">Journal</li>
</ol>