@model IEnumerable<CharacterManager.Models.CharacterModels.CharacterListItem>

@{
    ViewBag.Title = "Index";
}

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@if (TempData.ContainsKey("SaveResult"))
{
    <div class="alert alert-success fade in" role="alert">

        <button type="button" class="close" data-dismiss="alert">
            <span>&times;</span>
        </button>
        @TempData["SaveResult"]
    </div>
}

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.CharacterName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CharacterRace)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CharacterGender)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CharacterClass)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Alignment)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.CharacterName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CharacterRace)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CharacterGender)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CharacterClass)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Alignment)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.CharacterId }) |
            @Html.ActionLink("Details", "Details", new { id = item.CharacterId }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.CharacterId }) |
            @Html.ActionLink("Journal", "Index", "Journal", new { id = item.CharacterId }, null) |
            @Html.ActionLink("Inventory", "Index", "Inventory", new { id = item.CharacterId }, null)
        </td>
    </tr>
    }

</table>
